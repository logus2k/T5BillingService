server.port=10443
server.http2.enabled=true
security.require-ssl=false
server.ssl.enabled=true
# server.ssl.key-store-provider=SUN
# server.ssl.key-store-type=PKCS12
server.ssl.key-store-type=JKS
server.ssl.key-store=classpath:tech5billing.com.keystore.jks
server.ssl.key-password=Tech5!


server.ssl.client-auth=want
server.ssl.trust-store=classpath:tech5billing.com.truststore.jks
server.ssl.trust-store-password=Tech5!


## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
#Hibernate=ddl auto (create, create-drop, validate, update)

# DATABASE PROPERTIES

## AWS Instance

#spring.datasource.url = jdbc:mysql://localhost:3306/t5billing?useSSL=false
#spring.datasource.url = jdbc:postgresql://3.144.156.103:5432/tech5billing

# spring.datasource.username=t5testuser
# spring.datasource.password=t5testpass

# Local container

spring.datasource.username=logus2k
spring.datasource.password=Xpto123!

spring.datasource.url = jdbc:postgresql://127.0.0.1:5432/tech5billing
